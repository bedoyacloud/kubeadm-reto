apt update

apt upgrade -y

SETEANDO NETWORKING

# Cargar módulos necesarios para Kubernetes y Containerd
cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

# Cargar los módulos inmediatamente
sudo modprobe overlay
sudo modprobe br_netfilter

# Configurar parámetros de sysctl necesarios para Kubernetes
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward = 1
EOF

# Aplicar las configuraciones de sysctl
sudo sysctl --system

# Verificar que los módulos están cargados
lsmod | grep -e overlay -e br_netfilter


INSTALANDO CONTAINERD.IO

sudo apt-get install -y apt-transport-https ca-certificates curl gpg

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/docker-archive-keyring.gpg

sudo add-apt-repository \
"deb [arch=amd64] https://download.docker.com/linux/ubuntu \
$(lsb_release -cs) \
stable"

sudo apt update
sudo apt upgrade
sudo apt install -y containerd.io

sudo mkdir -p /etc/containerd

sudo containerd config default | sudo tee /etc/containerd/config.toml

sudo systemctl restart containerd
sudo systemctl enable containerd

PREPARAR INSTALACION KUBEADM KUBELET KUBECTL

 (Download the public signing key for the Kubernetes package repositories. The same signing key is used for all repositories so you can disregard the version in the URL:)

# If the directory `/etc/apt/keyrings` does not exist, it should be created before the curl command, read the note below.
# sudo mkdir -p -m 755 /etc/apt/keyrings
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg


4- (Add the appropriate Kubernetes apt repository. Please note that this repository have packages only for Kubernetes 1.30; for other Kubernetes minor versions, you need to change the Kubernetes minor version in the URL to match your desired minor version (you should also check that you are reading the documentation for the version of Kubernetes that you plan to install).)

# This overwrites any existing configuration in /etc/apt/sources.list.d/kubernetes.list
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

INSTALACION 

sudo apt update && sudo apt install -y kubelet kubeadm kubectl && sudo apt-mark hold kubelet kubeadm kubectl


#kubeadm init --kubernetes-version=1.30.0 --pod-network-cidr=10.8.0.0/16

sudo kubeadm init --apiserver-advertise-address=172.31.30.22


kubeadm join 172.31.30.22:6443 --token 8u3r2s.tvqhuoggeh7ww0mj \
        --discovery-token-ca-cert-hash sha256:de830712ec9ee032983f75c2b2bf1980b202c53e83318a6135acb1563bb6d799


Tomo documentacion de calico para ambientes dev - open source (https://docs.tigera.io/calico/latest/getting-started/kubernetes/quickstart)


kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.28.0/manifests/tigera-operator.yaml